name: "Setup Python"
description: "Setup python, install poetry, install dependencies, cache."

inputs:
  dev:
    description: "Install developer dependencies."
    required: true
    default: "false"

  python_version:
    description: "The python version to use."
    required: true

  working_dir:
    description: "The location to run the poetry commands in"
    required: true
    default: "."

  use_cache:
    description: "Enable the usage of cache for this action"
    required: true
    default: "true"

  install_args:
    description: "Extra arguments passed to the install command"
    required: false
    default: ""

outputs:
  cache-hit:
    description: "Was there a cache hit for the python cache."
    value: ${{ steps.python_cache.outputs.cache-hit }}
  python-version:
    description: "The full Python semver version used."
    value: ${{ steps.python_setup.outputs.python-version }}

runs:
  using: "composite"

  steps:
    # Checkout the code to get access to project files such as poetry and pre-commit configs
    - uses: actions/checkout@v2

    # Install python in our workflow
    - name: Setup python
      uses: actions/setup-python@v4
      id: python_setup
      with:
        python-version: ${{ inputs.python_version }}

    # Specify directories that require caching
    - name: Python Dependency Caching
      uses: actions/cache@v3
      id: python_cache
      with:
        path: |
          ~/.cache/pypoetry
          ~/.cache/py-user-base
        key: "python-${{ runner.os }}-${{ env.PYTHONUSERBASE }}-\
        v1.2.1-\
        ${{ steps.python_setup.outputs.python-version }}-${{ inputs.dev }}-${{ inputs.working_dir }}\
        ${{ hashFiles('./pyproject.toml', './poetry.lock') }}"

    # Cache pre-commit independently of other cache
    - name: Pre-commit Environment Caching
      uses: actions/cache@v3
      with:
        path: ~/.cache/pre-commit
        key: "precommit-${{ runner.os }}-${{ env.PRE_COMMIT_HOME }}-\
        v1.2.1-\
        ${{ steps.python_setup.outputs.python-version }}-${{ inputs.dev }}-${{ inputs.working_dir }}\
        ${{ hashFiles('./.pre-commit-config.yaml') }}"

    - name: Install Poetry
      shell: bash
      run: |
        echo "::group::Install Poetry"
        pip install poetry
        echo "::endgroup::"

    - name: Install dependencies
      shell: bash
      run: |
        if [ "${{ steps.python_cache.outputs.cache-hit }}" = "true" ]; then
          if [ "${{ inputs.use_cache }}" = "false" ]; then
            echo "Caching not enbaled, deleting cache."
            rm -rf  ~/.cache/py-user-base
            rm -rf  ~/.cache/pre-commit
          else
            echo "Cache hit, skipping install."
            exit
          fi
        fi

        echo "::group::Install Dependencies"
        cd ${{ inputs.working_dir }}

        if [ "${{ inputs.dev }}" = "true" ]; then
          python -m poetry install ${{ inputs.install_args }}
        else
          python -m poetry install ${{ inputs.install_args }} --no-dev
        fi
        echo "::endgroup::"

    - name: Configure Path
      shell: bash
      run: |
        cd ${{ inputs.working_dir }}
        echo "$(python -m poetry env info --path)/bin" >> $GITHUB_PATH
